name: Swift

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  cancel_previous:
    runs-on: ubuntu-latest
    steps:
      - uses: styfle/cancel-workflow-action@0.12.0
        with:
          workflow_id: ${{ github.event.workflow.id }}

  generate_code_coverage:
    needs: cancel_previous
    runs-on: macos-15
    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "16.2"
      - uses: actions/checkout@v2
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SOVRAN_SSH_KEY }}
      - name: Build & Run tests
        run: swift test --enable-code-coverage
      - name: Convert coverage report
        run: xcrun llvm-cov export -format="lcov" .build/debug/SegmentPackageTests.xctest/Contents/MacOS/SegmentPackageTests -instr-profile .build/debug/codecov/default.profdata > coverage.lcov
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: segmentio/analytics-swift

  build_and_test_spm_mac:
    needs: cancel_previous
    runs-on: macos-15
    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "16.2"
      - uses: actions/checkout@v2
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SOVRAN_SSH_KEY }}
      - name: Build & Run tests
        run: swift test

  build_and_test_ios:
    needs: cancel_previous
    runs-on: macos-15
    steps:
      - name: Install yeetd
        run: |
          wget https://github.com/biscuitehh/yeetd/releases/download/1.0/yeetd-normal.pkg
          sudo installer -pkg yeetd-normal.pkg -target /
          yeetd &
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "16.2"
      - uses: actions/checkout@v2
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SOVRAN_SSH_KEY }}
      - run: xcodebuild -scheme Segment test -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 16'

  build_and_test_tvos:
    needs: cancel_previous
    runs-on: macos-15
    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "16.2"
      - uses: actions/checkout@v2
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SOVRAN_SSH_KEY }}
      - run: xcodebuild -scheme Segment test -sdk appletvsimulator -destination 'platform=tvOS Simulator,name=Apple TV'

  build_and_test_watchos:
    needs: cancel_previous
    runs-on: macos-15
    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "16.2"
      - uses: actions/checkout@v2
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SOVRAN_SSH_KEY }}
      - run: xcodebuild -scheme Segment test -sdk watchsimulator -destination 'platform=watchOS Simulator,name=Apple Watch Series 10 (42mm)'

  build_and_test_visionos:
    needs: cancel_previous
    runs-on: macos-15
    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "16.2"
      - uses: actions/checkout@v2
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SOVRAN_SSH_KEY }}
      - run: defaults write com.apple.dt.Xcode AllowUnsupportedVisionOSHost -bool YES
      - run: defaults write com.apple.CoreSimulator AllowUnsupportedVisionOSHost -bool YES
      - run: xcodebuild -downloadPlatform visionOS
      - run: echo - skip until apple fixes this - xcodebuild -scheme Segment test -sdk xrsimulator -destination 'platform=visionOS Simulator,name=Apple Vision Pro'
      - run: xcodebuild -scheme Segment -sdk xrsimulator -destination 'platform=visionOS Simulator,name=Apple Vision Pro'

  build_and_test_examples:
    needs: cancel_previous
    runs-on: macos-15
    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "16.2"
      - uses: actions/checkout@v2
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SOVRAN_SSH_KEY }}
      - name: build for ios simulator
        run: |
          cd Examples/apps/BasicExample
          xcodebuild -workspace "BasicExample.xcworkspace" -scheme "BasicExample" -sdk iphonesimulator
      - name: build for ios simulator
        run: |
          cd Examples/apps/ObjCExample
          xcodebuild -workspace "ObjCExample.xcworkspace" -scheme "ObjCExample" -sdk iphonesimulator
      - name: build for ios simulator
        run: |
          cd Examples/apps/SegmentUIKitExample
          xcodebuild -workspace "SegmentUIKitExample.xcworkspace" -scheme "SegmentUIKitExample" -sdk iphonesimulator
      - name: build for ios simulator
        run: |
          cd Examples/apps/SegmentWeatherWidget
          xcodebuild -workspace "SegmentWeatherWidget.xcworkspace" -scheme "SegmentWeatherWidget" -sdk iphonesimulator
      - name: build for mac catalyst
        run: |
          cd Examples/apps/SegmentUIKitExample
          xcodebuild -workspace "SegmentUIKitExample.xcworkspace" -scheme "SegmentUIKitExample" -destination 'platform=macOS,variant=Mac Catalyst'
