name: Swift

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_and_test_spm_mac:
    runs-on: macos-11
    steps:
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '13.0'
    - uses: actions/checkout@v2
    - uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SOVRAN_SSH_KEY }}
    - name: Build
      run: swift build
    - name: Run tests
      run: swift test

  build_and_test_spm_linux:
    runs-on: ubuntu-latest
    steps:
    - uses: fwal/setup-swift@v1
      with:
        swift-version: "5.4"
    - uses: actions/checkout@v2
    - uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SOVRAN_SSH_KEY }}
    - name: Build
      run: swift build
    - name: Run tests
      run: swift test --enable-test-discovery

  build_and_test_ios:
    runs-on: macos-11
    steps:
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '13.0'
    - uses: actions/checkout@v2
    - uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SOVRAN_SSH_KEY }}
    # Workarounds for Xcode/SPM failing to get packages
    - run: sudo defaults write com.apple.dt.Xcode IDEPackageSupportUseBuiltinSCM YES
    - run: rm ~/.ssh/id_rsa || true
    - run: for ip in $(dig @8.8.8.8 bitbucket.org +short); do ssh-keyscan bitbucket.org,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts || true 
    - run: for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts || true
    # Xcodebuild will automatically build so no need to call it out specifically.
    - run: xcodebuild -scheme Segment-Package test -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 11'

  build_and_test_tvos:
    runs-on: macos-11
    steps:
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '13.0'
    - uses: actions/checkout@v2
    - uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SOVRAN_SSH_KEY }}
    # Workarounds for Xcode/SPM failing to get packages
    - run: sudo defaults write com.apple.dt.Xcode IDEPackageSupportUseBuiltinSCM YES
    - run: rm ~/.ssh/id_rsa || true
    - run: for ip in $(dig @8.8.8.8 bitbucket.org +short); do ssh-keyscan bitbucket.org,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts || true 
    - run: for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts || true
    # Xcodebuild will automatically build so no need to call it out specifically.
    - run: xcodebuild -scheme Segment-Package test -sdk appletvsimulator -destination 'platform=tvOS Simulator,name=Apple TV'

  build_and_test_watchos:
    runs-on: macos-11
    steps:
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '13.0'
    - uses: actions/checkout@v2
    - uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SOVRAN_SSH_KEY }}
    # Workarounds for Xcode/SPM failing to get packages
    - run: sudo defaults write com.apple.dt.Xcode IDEPackageSupportUseBuiltinSCM YES
    - run: rm ~/.ssh/id_rsa || true
    - run: for ip in $(dig @8.8.8.8 bitbucket.org +short); do ssh-keyscan bitbucket.org,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts || true 
    - run: for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts || true
    # Xcodebuild will automatically build so no need to call it out specifically.
    - run: xcodebuild -scheme Segment-Package test -sdk watchsimulator -destination 'platform=watchOS Simulator,name=Apple Watch Series 5 - 40mm'
    
  build_examples:
    runs-on: macos-11
    steps:
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '13.0'
    - uses: actions/checkout@v2
    - uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SOVRAN_SSH_KEY }}
    # Workarounds for Xcode/SPM failing to get packages
    - run: sudo defaults write com.apple.dt.Xcode IDEPackageSupportUseBuiltinSCM YES
    - run: rm ~/.ssh/id_rsa || true
    - run: for ip in $(dig @8.8.8.8 bitbucket.org +short); do ssh-keyscan bitbucket.org,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts || true 
    - run: for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts || true
    - name: build for ios simulator
      run: |
          cd Examples/apps/BasicExample
          xcodebuild -workspace "BasicExample.xcworkspace" -scheme "BasicExample" -sdk iphonesimulator
    - name: build for ios simulator
      run: |
          cd Examples/apps/DestinationsExample
          xcodebuild -workspace "DestinationsExample.xcworkspace" -scheme "DestinationsExample" -sdk iphonesimulator
    - name: build for ios simulator
      run: |
          cd Examples/apps/ObjCExample
          xcodebuild -workspace "ObjCExample.xcworkspace" -scheme "ObjCExample" -sdk iphonesimulator
    - name: build for ios simulator
      run: |
          cd Examples/apps/SegmentUIKitExample
          xcodebuild -workspace "SegmentUIKitExample.xcworkspace" -scheme "SegmentUIKitExample" -sdk iphonesimulator
    - name: build for mac catalyst
      run: |
          cd Examples/apps/SegmentUIKitExample
          xcodebuild -workspace "SegmentUIKitExample.xcworkspace" -scheme "SegmentUIKitExample" -destination 'platform=macOS,variant=Mac Catalyst'
